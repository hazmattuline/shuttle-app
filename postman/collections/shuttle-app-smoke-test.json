{
	"info": {
		"_postman_id": "a1d24428-453f-4046-8c70-ea97a8c94250",
		"name": "Shuttle app smoke tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Get Security Token From Auth Service and Initialize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//var jsonData = pm.response.json();",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    console.log(\"json data: \" + jsonData);",
									"    var expectedStatus = 200;",
									"    var responseTest = responseCode.code === expectedStatus;",
									"",
									"if(responseTest === true){",
									"        tests[\"Status code is \" + responseCode.code] = responseTest;",
									"       // var jsonData = JSON.parse(responseBody);",
									"        var auth_token = jsonData.token;",
									"        postman.setGlobalVariable(\"security_token\", auth_token);",
									"        postman.setEnvironmentVariable(\"token\", auth_token);",
									"        ",
									"       tests[\"Country is US\"] = responseBody.has(\"US\");",
									"        tests[\"Person name matches\"] = jsonData.fullName;",
									"        ",
									"    }else{",
									"        console.log(request.data);",
									"        tests[\"Status code is \" + responseCode.code + \" - Expecting: \" + expectedStatus] = responseTest;",
									"       ",
									"    }",
									"",
									"/*pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"*/",
									"",
									"",
									"/*pm.test(\"Set Security Token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.country).to.eql(\"US\");",
									"    pm.expect(jsonData.fullName).to.eql(\"PERFORM5\");",
									"    var auth_token = jsonData.token;",
									"    pm.globals.set(\"security_token\", auth_token);",
									"    pm.environment.set(\"token\", auth_token);",
									"    console.log(pm.globals.get(\"security_token\"));",
									"});*/",
									"",
									"}catch(e){",
									"    tests[\"Test Code Failure - \" + e] = false;",
									"    console.log(e);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Uline123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "perform5",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://dc2-svzsys02.ulinedm.com:31114/security-services/v3/auth",
							"protocol": "http",
							"host": [
								"dc2-svzsys02",
								"ulinedm",
								"com"
							],
							"port": "31114",
							"path": [
								"security-services",
								"v3",
								"auth"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "http://{{shuttle-app-uri}}/shuttle-app/info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"service name is as expected\"] = jsonData.Manifest[\"Implementation-Title\"] === \"shuttle-app-server\""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{shuttle-app-uri}}/shuttle-app/info",
					"protocol": "http",
					"host": [
						"{{shuttle-app-uri}}"
					],
					"path": [
						"shuttle-app",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://{{shuttle-app-uri}}/shuttle-app/info Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{shuttle-app-uri}}/shuttle-app/api/shuttles?status=A",
					"protocol": "http",
					"host": [
						"{{shuttle-app-uri}}"
					],
					"path": [
						"shuttle-app",
						"api",
						"shuttles"
					],
					"query": [
						{
							"key": "status",
							"value": "A"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://{{shuttle-app-uri}}/shuttle-app/info Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{shuttle-app-uri}}/shuttle-app/api/shuttle-routes",
					"protocol": "http",
					"host": [
						"{{shuttle-app-uri}}"
					],
					"path": [
						"shuttle-app",
						"api",
						"shuttle-routes"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
